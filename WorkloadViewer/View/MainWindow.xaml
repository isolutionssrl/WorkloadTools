<Controls:MetroWindow x:Class="WorkloadViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:local="clr-namespace:WorkloadViewer.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        xmlns:oxy="http://oxyplot.org/wpf"
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:avalonedit="http://icsharpcode.net/sharpdevelop/avalonedit"
        mc:Ignorable="d"
        GlowBrush="{DynamicResource AccentColorBrush}"
        SaveWindowPosition="True"
        Height="600" Width="1490"
        WindowState="Maximized"
        Title="Workload Viewer"
        TitleCaps="False"
        Dialog:DialogParticipation.Register="{Binding}"
        x:Name="MainWin">
    <Window.Resources>
        <local:MainViewModel x:Key="MainViewModel" />

        <Style TargetType="DataGridCell">
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>

        <CollectionViewSource x:Key="WorkloadQueries" Source="{Binding Queries, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />

    </Window.Resources>

    <Window.DataContext>
        <Binding Source="{StaticResource MainViewModel}" />
    </Window.DataContext>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <command:EventToCommand Command="{Binding KeyDownCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <command:EventToCommand Command="{Binding LoadedCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="ContentRendered">
            <command:EventToCommand Command="{Binding RenderedCommand}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}" />
            </StatusBarItem>
        </StatusBar>

        <TabControl TabStripPlacement="Bottom" DockPanel.Dock="Top" x:Name="MainTabControl">
            <TabItem Header="Workload">
                <DockPanel Name="ContentPanel">
                    <Grid x:Name="FiltersGrid" DockPanel.Dock="Top" Visibility="Visible">
                        <Border BorderThickness="0,0,0,2" BorderBrush="{DynamicResource AccentColorBrush}" >
                        <DockPanel>
                            <Grid DockPanel.Dock="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <DataGrid ItemsSource="{Binding Path=ApplicationList}" AutoGenerateColumns="False" CanUserResizeColumns="False" CanUserAddRows="False" Grid.Column="0" MaxHeight="150" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="5">
                                    <DataGrid.Columns>
                                        <DataGridCheckBoxColumn ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                            EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                            Header=""
                                            Binding="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        />
                                        <DataGridTextColumn 
                                            Header="Application Name"
                                            Binding="{Binding Name, Mode=OneWay}"
                                            IsReadOnly="True"
                                        />
                                    </DataGrid.Columns>
                                    <DataGrid.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="IsEditing" Value="True" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.CellStyle>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="DataGridRow">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                                    <Setter Property="Background" Value="Transparent" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.RowStyle>
                                    <DataGrid.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#000000"/>
                                    </DataGrid.Resources>
                                </DataGrid>


                                <DataGrid ItemsSource="{Binding Path=DatabaseList}" AutoGenerateColumns="False" CanUserResizeColumns="False" CanUserAddRows="False" Grid.Column="1" MaxHeight="150" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="5">
                                    <DataGrid.Columns>
                                        <DataGridCheckBoxColumn ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                            EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                            Header=""
                                            Binding="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        />
                                        <DataGridTextColumn 
                                            Header="Database Name"
                                            Binding="{Binding Name, Mode=OneWay}"
                                            IsReadOnly="True"
                                        />
                                    </DataGrid.Columns>
                                    <DataGrid.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="IsEditing" Value="True" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.CellStyle>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="DataGridRow">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                                    <Setter Property="Background" Value="Transparent" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.RowStyle>
                                    <DataGrid.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#000000"/>
                                    </DataGrid.Resources>
                                </DataGrid>

                                <DataGrid ItemsSource="{Binding Path=HostList}" AutoGenerateColumns="False" CanUserResizeColumns="False" CanUserAddRows="False" Grid.Column="2" MaxHeight="150" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="5">
                                    <DataGrid.Columns>
                                        <DataGridCheckBoxColumn ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                            EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                            Header=""
                                            Binding="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        />
                                        <DataGridTextColumn 
                                            Header="Host Name"
                                            Binding="{Binding Name, Mode=OneWay}"
                                            IsReadOnly="True"
                                        />
                                    </DataGrid.Columns>
                                    <DataGrid.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="IsEditing" Value="True" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.CellStyle>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="DataGridRow">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                                    <Setter Property="Background" Value="Transparent" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.RowStyle>
                                    <DataGrid.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#000000"/>
                                    </DataGrid.Resources>
                                </DataGrid>

                                <DataGrid ItemsSource="{Binding Path=LoginList}" AutoGenerateColumns="False" CanUserResizeColumns="False" CanUserAddRows="False" Grid.Column="3" MaxHeight="150" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="5">
                                    <DataGrid.Columns>
                                        <DataGridCheckBoxColumn ElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        EditingElementStyle="{DynamicResource MetroDataGridCheckBox}"
                                        Header=""
                                        Binding="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    />
                                    <DataGridTextColumn 
                                        Header="Login Name"
                                        Binding="{Binding Name, Mode=OneWay}"
                                        IsReadOnly="True"
                                    />
                                    </DataGrid.Columns>
                                    <DataGrid.CellStyle>
                                        <Style TargetType="DataGridCell">
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="IsEditing" Value="True" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.CellStyle>
                                    <DataGrid.RowStyle>
                                        <Style TargetType="DataGridRow">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                                    <Setter Property="Background" Value="Transparent" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DataGrid.RowStyle>
                                    <DataGrid.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#000000"/>
                                    </DataGrid.Resources>
                                </DataGrid>

                            </Grid>
                            <Button DockPanel.Dock="Right" Width="100" Margin="5" Command="{Binding ApplyCommand}">Apply</Button>
                        </DockPanel>
                        </Border>
                    </Grid>
                        

                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" DockPanel.Dock="Bottom">
                        <Grid x:Name="MainGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="300" />
                                <RowDefinition Height="300" />
                                <RowDefinition Height="300" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <oxy:PlotView x:Name="CpuChart" Model="{Binding CpuPlotModel, Mode=OneWay}" IsMouseWheelEnabled="False" Margin="10" Grid.Row="0"  />
                            <oxy:PlotView x:Name="DurationChart" Model="{Binding DurationPlotModel, Mode=OneWay}" IsMouseWheelEnabled="False" Margin="10" Grid.Row="1"/>
                            <oxy:PlotView x:Name="BatchesChart" Model="{Binding BatchesPlotModel, Mode=OneWay}" IsMouseWheelEnabled="False" Margin="10" Grid.Row="2"/>

                        </Grid>
                    </ScrollViewer>
                </DockPanel>
            </TabItem>

            <TabItem Header="Queries">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="3*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                        <DataGrid x:Name="Queries" 
                                  AutoGenerateColumns="False" 
                                  ItemsSource="{Binding Source={StaticResource WorkloadQueries}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" 
                                  IsReadOnly="True" 
                                  SelectionUnit="FullRow" 
                                  SelectionMode="Single" 
                                  MouseDoubleClick="DataGridDoubleClick"
                                  VerticalScrollBarVisibility="Auto" 
                                  HorizontalScrollBarVisibility="Auto"
                                  MaxHeight="3000"
                                  RowHeight="23"
                                  Grid.Row="0">
                            <DataGrid.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#01B8AA"/>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#FFFFFF"/>
                                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
                            </DataGrid.Resources>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                            <Setter Property="Background" Value="#01B8AA" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Hash"                 Binding="{Binding query_hash}" />
                                <DataGridTextColumn Header="query_text"           Binding="{Binding query_text}" Visibility="Collapsed"/>
                                <DataGridTextColumn Header="query_normalized"     Binding="{Binding query_normalized}" Visibility="Collapsed" />
                                <DataGridTextColumn Header="sum_duration_us"      Binding="{Binding sum_duration_us, StringFormat=N0}" />
                                <DataGridTextColumn Header="sum_duration_us2"     Binding="{Binding sum_duration_us2, StringFormat=N0}" Visibility="{Binding CompareModeVisibility, Source={StaticResource MainViewModel}}" />
                                <DataGridTextColumn Header="diff_sum_duration_us" Binding="{Binding diff_sum_duration_us, StringFormat=N0}" Visibility="{Binding CompareModeVisibility, Source={StaticResource MainViewModel}}"/>
                                <DataGridTextColumn Header="avg_duration_us"      Binding="{Binding avg_duration_us, StringFormat=N0}" />
                                <DataGridTextColumn Header="avg_duration_us2"     Binding="{Binding avg_duration_us2, StringFormat=N0}" Visibility="{Binding CompareModeVisibility, Source={StaticResource MainViewModel}}" />
                                <DataGridTextColumn Header="sum_cpu_us"           Binding="{Binding sum_cpu_us, StringFormat=N0}" />
                                <DataGridTextColumn Header="sum_cpu_us2"          Binding="{Binding sum_cpu_us2, StringFormat=N0}"  Visibility="{Binding CompareModeVisibility, Source={StaticResource MainViewModel}}"/>
                                <DataGridTextColumn Header="diff_sum_cpu_us"      Binding="{Binding diff_sum_cpu_us, StringFormat=N0}" Visibility="{Binding CompareModeVisibility, Source={StaticResource MainViewModel}}"/>
                                <DataGridTextColumn Header="avg_cpu_us"           Binding="{Binding avg_cpu_us, StringFormat=N0}" />
                                <DataGridTextColumn Header="avg_cpu_us2"          Binding="{Binding avg_cpu_us2, StringFormat=N0}" Visibility="{Binding CompareModeVisibility, Source={StaticResource MainViewModel}}" />
                                <DataGridTextColumn Header="sum_reads"            Binding="{Binding sum_reads, StringFormat=N0}" />
                                <DataGridTextColumn Header="sum_reads2"           Binding="{Binding sum_reads2, StringFormat=N0}" Visibility="{Binding CompareModeVisibility, Source={StaticResource MainViewModel}}" />
                                <DataGridTextColumn Header="avg_reads"            Binding="{Binding avg_reads, StringFormat=N0}" />
                                <DataGridTextColumn Header="avg_reads2"           Binding="{Binding avg_reads2, StringFormat=N0}" Visibility="{Binding CompareModeVisibility, Source={StaticResource MainViewModel}}" />
                                <DataGridTextColumn Header="execution_count"      Binding="{Binding execution_count, StringFormat=N0}" />
                                <DataGridTextColumn Header="execution_count2"     Binding="{Binding execution_count2, StringFormat=N0}" Visibility="{Binding CompareModeVisibility, Source={StaticResource MainViewModel}}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    <avalonedit:TextEditor 
                        SyntaxHighlighting="SQL" 
                        x:Name="QueryText" 
                        Grid.Row="1" 
                        VerticalScrollBarVisibility="Visible"
                        HorizontalScrollBarVisibility="Auto"
                        FontFamily="Consolas"
                        FontSize="14"
                        IsReadOnly="True"
                        BorderThickness="0,1,0,0"
                        Padding="10,20,10,20"
                        ShowLineNumbers="True"
                        Document="{Binding ElementName=Queries, Path=SelectedItem.document}" 
                        MouseDoubleClick="QueryText_MouseDoubleClick" 
                        Tag="{Binding ElementName=Queries, Path=SelectedItem.query_hash}" 
                    />
                </Grid>
            </TabItem>

            <TabItem Header="Query Details" x:Name="QueryDetailsTabItem">
                <Grid x:Name="DetailsGrid" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <avalonedit:TextEditor 
                        SyntaxHighlighting="SQL" 
                        x:Name="QueryDetailText" 
                        Grid.Row="0" 
                        VerticalScrollBarVisibility="Visible"
                        HorizontalScrollBarVisibility="Auto"
                        FontFamily="Consolas"
                        FontSize="14"
                        IsReadOnly="True"
                        BorderThickness="0"
                        Padding="0,20,0,20"
                        ShowLineNumbers="True"
                        Document="{Binding ElementName=Queries, Path=SelectedItem.document}" 
                        MouseDoubleClick="QueryText_MouseDoubleClick" 
                        Tag="{Binding ElementName=Queries, Path=SelectedItem.query_hash}"
                    />
                    
                    <DataGrid x:Name="QueryStats" AutoGenerateColumns="False" ItemsSource="{Binding ElementName=Queries, Path=SelectedItem.querydetails.QueryStats, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" IsReadOnly="True" SelectionUnit="FullRow" SelectionMode="Single" Grid.Row="1">
                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#01B8AA"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#FFFFFF"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
                        </DataGrid.Resources>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                        <Setter Property="Background" Value="#01B8AA" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Application"          Binding="{Binding Application}" />
                            <DataGridTextColumn Header="Database"             Binding="{Binding Database}" />
                            <DataGridTextColumn Header="Host"                 Binding="{Binding Host}" />
                            <DataGridTextColumn Header="Login"                Binding="{Binding Login}" /> 
                            <DataGridTextColumn Header="avg_duration_us"      Binding="{Binding avg_duration_us, StringFormat=N0}" />
                            <DataGridTextColumn Header="avg_duration_us2"     Binding="{Binding avg_duration_us2, StringFormat=N0}" Visibility="{Binding CompareModeVisibility, Source={StaticResource MainViewModel}}" />
                            <DataGridTextColumn Header="avg_cpu_us"           Binding="{Binding avg_cpu_us, StringFormat=N0}" />
                            <DataGridTextColumn Header="avg_cpu_us2"          Binding="{Binding avg_cpu_us2, StringFormat=N0}"  Visibility="{Binding CompareModeVisibility, Source={StaticResource MainViewModel}}"/>
                            <DataGridTextColumn Header="avg_reads"            Binding="{Binding avg_reads, StringFormat=N0}" />
                            <DataGridTextColumn Header="avg_reads2"           Binding="{Binding avg_reads2, StringFormat=N0}" Visibility="{Binding CompareModeVisibility, Source={StaticResource MainViewModel}}" />
                            <DataGridTextColumn Header="execution_count"      Binding="{Binding execution_count, StringFormat=N0}" />
                            <DataGridTextColumn Header="execution_count2"     Binding="{Binding execution_count2, StringFormat=N0}" Visibility="{Binding CompareModeVisibility, Source={StaticResource MainViewModel}}" />
                        </DataGrid.Columns>
                    </DataGrid>
                    
                    <oxy:PlotView x:Name="QueryDetailChart" Model="{Binding ElementName=Queries, Path=SelectedItem.querydetails.DetailPlotModel, Mode=OneWay}" Margin="10" Grid.Row="2"/>
                </Grid>
             </TabItem>
        </TabControl>
    </DockPanel>
</Controls:MetroWindow>
